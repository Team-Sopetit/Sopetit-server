name: deploy-prod

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: gradle

      - name: Create application-secret.yml
        run: |
          pwd
          touch src/main/resources/application-secret.yml
          echo "${{ secrets.APPLICATION_SECRET_YML }}" >> src/main/resources/application-secret.yml
          cat src/main/resources/application-secret.yml

      - name: create fcm.json
        uses: jsdaniell/create-json@v1.2.2
        with:
          name: "softie-server-fcm.json"
          json: ${{ secrets.FCM }}
          dir: 'src/main/resources'

      - name: build
        run: |
          chmod +x gradlew
          ./gradlew build -x test
        working-directory: ${{ env.working-directory }}
        shell: bash


      - name: docker build 환경 설정
        uses: docker/setup-buildx-action@v2.9.1

      - name: docker hub 로그인
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_LOGIN_USERNAME_PROD }}
          password: ${{ secrets.DOCKER_LOGIN_ACCESSTOKEN_PROD }}

      - name: docker image 빌드 및 푸시
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile-prod
          push: true
          tags: ${{ secrets.DOCKER_LOGIN_USERNAME_PROD }}/prod

  cd:
    needs: build
    runs-on: ubuntu-22.04

    steps:
      - name: docker 컨테이너 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP_PROD }}
          username: ${{ secrets.SERVER_USER_PROD }}
          key: ${{ secrets.SERVER_KEY_PROD }}
          script: |
            cd ~
            ./deploy.sh
